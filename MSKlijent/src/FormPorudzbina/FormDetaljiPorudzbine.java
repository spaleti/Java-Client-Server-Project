/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormPorudzbina;

import FormBolnica.FormDetaljiBolnice;
import controller.ClientController;
import domain.KategorijaMedicinskogSredstva;
import domain.MedicinskoSredstvo;
import domain.Porudzbina;
import domain.StavkaPorudzbine;
import forms.MainForm;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import models.TableModelStavke;

/**
 *
 * @Korisnik
 */
public class FormDetaljiPorudzbine extends javax.swing.JDialog {

    private Porudzbina porudzbina;

    public FormDetaljiPorudzbine(JDialog parent, boolean modal, Porudzbina p) {
        super(parent, modal);
        initComponents();
        this.porudzbina = p;
        setLocationRelativeTo(null);
        setTitle("Detalji porudzbine");
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        cmbKategorija = new javax.swing.JComboBox();
        cmbMedicinskoSredstvo = new javax.swing.JComboBox();
        txtCenaStavke = new javax.swing.JFormattedTextField();
        txtKolicina = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblUkupnaCena = new javax.swing.JLabel();
        txtDatumIsporuke = new javax.swing.JFormattedTextField();
        cmbBolnica = new javax.swing.JComboBox();
        btnIzmeni = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        btnZatvori = new javax.swing.JButton();
        lblObavestenje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalji porudzbine"));

        jLabel1.setText("Bolnica:");

        jLabel2.setText("Datum isporuke:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavke porudzbine"));

        jLabel4.setText("Kategorija medicinskog sredstva:");

        jLabel5.setText("Medicinsko sredstvo:");

        jLabel6.setText("Kolicina:");

        jLabel7.setText("Cena:");

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavke);

        btnDodaj.setText("Dodaj stavku");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi stavku");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        cmbKategorija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKategorija.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbKategorijaItemStateChanged(evt);
            }
        });
        cmbKategorija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKategorijaActionPerformed(evt);
            }
        });

        cmbMedicinskoSredstvo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMedicinskoSredstvo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMedicinskoSredstvoItemStateChanged(evt);
            }
        });

        txtCenaStavke.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtCenaStavke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCenaStavkeActionPerformed(evt);
            }
        });

        txtKolicina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKolicinaKeyReleased(evt);
            }
        });

        jLabel3.setText("Ukupna cena:");

        lblUkupnaCena.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbMedicinskoSredstvo, 0, 370, Short.MAX_VALUE)
                            .addComponent(cmbKategorija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(139, 139, 139)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCenaStavke, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(lblUkupnaCena)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbMedicinskoSredstvo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtCenaStavke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDodaj)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnObrisi)
                        .addComponent(jLabel3)
                        .addComponent(lblUkupnaCena)))
                .addContainerGap())
        );

        txtDatumIsporuke.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));
        txtDatumIsporuke.setText("10.10.2024");
        txtDatumIsporuke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatumIsporukeActionPerformed(evt);
            }
        });

        cmbBolnica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnIzmeni.setText("Izmeni porudzbinu");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi porudzbinu");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        lblObavestenje.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnZatvori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblObavestenje)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtDatumIsporuke, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(63, 63, 63)
                        .addComponent(cmbBolnica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblObavestenje)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbBolnica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatumIsporuke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOtkazi, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnZatvori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        try {
            if (txtDatumIsporuke.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Greska ... morate uneti datum isporuke!");
                return;
            }

            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date datumIsporuke = sdf.parse(txtDatumIsporuke.getText());

            double ukupnaCena = Double.parseDouble(lblUkupnaCena.getText().replaceAll("[^0-9.]", ""));
            TableModelStavke tm = (TableModelStavke) tblStavke.getModel();

            porudzbina.setDatumIsporuke(datumIsporuke);
            porudzbina.setUkupnaCena(ukupnaCena);
            porudzbina.setStavkePorudzbine(tm.getLista());

            ClientController.getInstance().updatePorudzbina(porudzbina);
            if (getParent() instanceof FormPretragaPorudzbine) {
                FormPretragaPorudzbine fpp = (FormPretragaPorudzbine) getParent();
                fpp.refreshTable();
            } else {
                FormDetaljiBolnice fdb = (FormDetaljiBolnice) getParent();
                fdb.refreshTable();
            }
            JOptionPane.showMessageDialog(this, "Uspesno izmenjena porudzbina.");
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(FormDetaljiPorudzbine.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "otkazete ovu porudzbinu?", "Konfirmacija", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            try {
                ClientController.getInstance().deletePorudzbina(porudzbina);
                if (getParent() instanceof FormPretragaPorudzbine) {
                    FormPretragaPorudzbine fpp = (FormPretragaPorudzbine) getParent();
                    fpp.refreshTable();
                } else {
                    FormDetaljiBolnice fdb = (FormDetaljiBolnice) getParent();
                    fdb.refreshTable();
                }
                JOptionPane.showMessageDialog(this, "Porudzbina je uspesno otkazana.");
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(FormDetaljiPorudzbine.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        if (txtKolicina.getText().isEmpty()
                || txtCenaStavke.getText().equals("0.00")) {
            JOptionPane.showMessageDialog(this, "Morate uneti kolicinu!");
            return;
        }

        MedicinskoSredstvo ms = (MedicinskoSredstvo) cmbMedicinskoSredstvo.getSelectedItem();
        int kolicina = Integer.parseInt(txtKolicina.getText());
        double cena = Double.parseDouble(txtCenaStavke.getText());

        StavkaPorudzbine sp = new StavkaPorudzbine(porudzbina, -1, kolicina, cena, ms);

        TableModelStavke tm = (TableModelStavke) tblStavke.getModel();
        tm.dodajStavku(sp);

        double ukupnaCena = Double.parseDouble(lblUkupnaCena.getText().replaceAll("[^0-9.]", ""));

        lblUkupnaCena.setText(String.valueOf(ukupnaCena + cena) + "rsd");

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int row = tblStavke.getSelectedRow();

        if (row >= 0) {
            TableModelStavke tm = (TableModelStavke) tblStavke.getModel();

            StavkaPorudzbine sp = tm.getStavka(row);

            double ukupnaCena = Double.parseDouble(lblUkupnaCena.getText().replaceAll("[^0-9.]", ""));

            lblUkupnaCena.setText(String.valueOf(ukupnaCena - sp.getCenaStavke()) + "rsd");

            tm.obrisiStavku(row);

        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void cmbKategorijaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbKategorijaItemStateChanged

        if (cmbKategorija.getSelectedItem() != null) {
            KategorijaMedicinskogSredstva kms = (KategorijaMedicinskogSredstva) cmbKategorija.getSelectedItem();
            popuniMedicinskaSredstva(kms);
        }
    }//GEN-LAST:event_cmbKategorijaItemStateChanged

    private void cmbMedicinskoSredstvoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMedicinskoSredstvoItemStateChanged

        if (cmbMedicinskoSredstvo.getSelectedItem() != null) {
            txtKolicina.setText("");
            txtCenaStavke.setText("0.00");
        }
    }//GEN-LAST:event_cmbMedicinskoSredstvoItemStateChanged

    private void txtKolicinaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKolicinaKeyReleased

        try {
            if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
                    || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {

                if (txtKolicina.getText().isEmpty()) {
                    txtCenaStavke.setText("0.00");
                    return;
                }

                int kolicina = Integer.parseInt(txtKolicina.getText());

                if (kolicina <= 0) {
                    txtKolicina.setText("");
                    return;
                }

                MedicinskoSredstvo ms = (MedicinskoSredstvo) cmbMedicinskoSredstvo.getSelectedItem();

                txtCenaStavke.setText(String.valueOf(ms.getCena() * kolicina));

            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Za kolicinu morate uneti broj!");
        }
    }//GEN-LAST:event_txtKolicinaKeyReleased

    private void cmbKategorijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKategorijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKategorijaActionPerformed

    private void txtCenaStavkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCenaStavkeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCenaStavkeActionPerformed

    private void txtDatumIsporukeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatumIsporukeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatumIsporukeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JComboBox cmbBolnica;
    private javax.swing.JComboBox cmbKategorija;
    private javax.swing.JComboBox cmbMedicinskoSredstvo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblObavestenje;
    private javax.swing.JLabel lblUkupnaCena;
    private javax.swing.JTable tblStavke;
    private javax.swing.JFormattedTextField txtCenaStavke;
    private javax.swing.JFormattedTextField txtDatumIsporuke;
    private javax.swing.JTextField txtKolicina;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        popuniKategorije();
        cmbBolnica.setEnabled(false);
        cmbBolnica.getModel().setSelectedItem(porudzbina.getBolnica());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        txtDatumIsporuke.setText(sdf.format(porudzbina.getDatumIsporuke()));
        lblUkupnaCena.setText(String.valueOf(porudzbina.getUkupnaCena() + "rsd"));
        txtCenaStavke.setText("0.00");
        txtCenaStavke.setEnabled(false);
        tblStavke.setModel(new TableModelStavke(porudzbina));

        if (porudzbina.getDatumIsporuke().before(new Date())
                || porudzbina.getDatumIsporuke().equals(new Date())) {
            txtDatumIsporuke.setEnabled(false);
            txtKolicina.setEnabled(false);
            btnDodaj.setEnabled(false);
            btnObrisi.setEnabled(false);
            btnOtkazi.setEnabled(false);
            btnIzmeni.setEnabled(false);
            cmbKategorija.setEnabled(false);
            cmbMedicinskoSredstvo.setEnabled(false);
            lblObavestenje.setText("Porudzbina je uspesno isporucena! Nije moguce menjati je, niti je otkazati.");
        }

    }

    private void popuniKategorije() {
        try {
            ArrayList<KategorijaMedicinskogSredstva> kategorije = ClientController.getInstance().getAllKategorijaMedicinskogSredstva();

            cmbKategorija.removeAllItems();

            for (KategorijaMedicinskogSredstva kms : kategorije) {
                cmbKategorija.addItem(kms);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniMedicinskaSredstva(KategorijaMedicinskogSredstva kms) {

        try {
            ArrayList<MedicinskoSredstvo> listaMedSredstva = ClientController.getInstance().getAllMedicinskoSredstvo(kms);

            cmbMedicinskoSredstvo.removeAllItems();

            for (MedicinskoSredstvo ms : listaMedSredstva) {
                cmbMedicinskoSredstvo.addItem(ms);
            }
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
